# This workflow enables manual deployments to different client environments.
# To add a new client (e.g., 'client_b'), you need to:
# 1. Add 'client_b' to the 'options' list under 'inputs.client'.
# 2. Create the following secrets in your GitHub repository settings:
#    - FIREBASE_SERVICE_ACCOUNT_CLIENT_B
#    - GEMINI_API_KEY_CLIENT_B
#    - FIREBASE_CONFIG_CLIENT_B

name: Manual Deploy to Client

on:
  workflow_dispatch:
    inputs:
      client:
        description: 'Client to deploy to'
        required: true
        type: choice
        options:
          - default
          - hitotoiro
          # Add new client names here

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Parse Firebase Config
        id: get_firebase_config
        run: |
          CLIENT_UPPER=$(echo "${{ inputs.client }}" | tr 'a-z' 'A-Z')
          CONFIG_JSON='${{ secrets[format('FIREBASE_CONFIG_{0}', CLIENT_UPPER)] }}'
          if [ -z "$CONFIG_JSON" ]; then
            echo "Firebase config secret not found for client: ${{ inputs.client }}" >&2
            exit 1
          fi
          echo "VITE_FIREBASE_API_KEY=$(echo $CONFIG_JSON | jq -r .apiKey)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_AUTH_DOMAIN=$(echo $CONFIG_JSON | jq -r .authDomain)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_PROJECT_ID=$(echo $CONFIG_JSON | jq -r .projectId)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_STORAGE_BUCKET=$(echo $CONFIG_JSON | jq -r .storageBucket)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=$(echo $CONFIG_JSON | jq -r .messagingSenderId)" >> $GITHUB_ENV
          echo "VITE_FIREBASE_APP_ID=$(echo $CONFIG_JSON | jq -r .appId)" >> $GITHUB_ENV
          echo "FIREBASE_PROJECT_ID=$(echo $CONFIG_JSON | jq -r .projectId)" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build
        env:
          VITE_GEMINI_API_KEY: ${{ secrets[format('GEMINI_API_KEY_{0}', upper(inputs.client))] }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets[format('FIREBASE_SERVICE_ACCOUNT_{0}', upper(inputs.client))] }}'
          channelId: live
          projectId: ${{ env.FIREBASE_PROJECT_ID }}